public class Solution {
    public int Search(int[] nums, int target) {
        for (int i = 0; i< nums.Length; i++)
        {
            if (nums [i] == target) {
                return i; 
            }
        }
        return -1;
    }
}

public class Solution {
    public int Search(int[] nums, int target) {
        int l = 0, r = nums.Length - 1;
        
        while(l <= r)
        {
            int mid = l + (r - l) / 2;
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] > target)
                r = mid - 1;
            else
                l = mid + 1;
        }
        
        return -1;
    }
}

public class Solution {
    public int Search(int[] nums, int target) {
        int idx = Array.BinarySearch(nums, target);
        if(idx < 0)
            idx = ~idx;
        
        return (idx < nums.Length && nums[idx] == target) ? idx : -1;
    }
}
